

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры


&НаКлиенте
Процедура ИспользоватьTLSПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры


&НаКлиенте
Процедура ТестProducer(Команда)
	ТестProducerНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТестProducerНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайлаКомпоненты, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	EnvironmentBuilder = Новый ("Addin.MedIgor.RabbitMQ.Stream.EnvironmentBuilder");
	ЗаполнитьНастройкиСреды(EnvironmentBuilder);
	Environment = EnvironmentBuilder.Build();
	
	Producer = Новый ("Addin.MedIgor.RabbitMQ.Stream.Producer");
	Producer.SetName("producer1");
	
	Попытка
		Producer.Build(Environment, Стрим);
	Исключение
		ВызватьИсключение Producer.LastError;
	КонецПопытки;
	
	Начало = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	КоличествоСообщений = 1;
	Для к = 1 По КоличествоСообщений Цикл
		Producer.SetApplicationProperty("Дата1", ТекущаяУниверсальнаяДата());
		Producer.SetApplicationProperty("Булево1", Истина);
		Producer.SetApplicationProperty("Число1", 123);                      
		
		// Большие числа нельзя так передавать, потому что в компоненту они передаются как double и теряется точность
		Producer.SetApplicationProperty("БольшоеЧисло1", 123456789123456789);
		
		Текст = СтрШаблон("Hello: %1", к);
		Тело = ПолучитьДвоичныеДанныеИзСтроки(Текст);
		Producer.AddMessage(Тело);
	КонецЦикла;
	Producer.BatchSend();
	//Statuses = Producer.Statuses();
	
	Конец = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Сообщить(СтрШаблон("Длительность: %1", Конец - Начало));
	
КонецПроцедуры


&НаКлиенте
Процедура ТестConsumer(Команда)
	ТестConsumerНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТестConsumerНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПодключитьВнешнююКомпоненту(ИмяФайлаКомпоненты, "MedIgor", ТипВнешнейКомпоненты.Native, 
		ТипПодключенияВнешнейКомпоненты.НеИзолированно) Тогда
		ВызватьИсключение "Не удалось подключить внешнюю компоненту";
	КонецЕсли;
	
	EnvironmentBuilder = Новый ("Addin.MedIgor.RabbitMQ.Stream.EnvironmentBuilder");
	ЗаполнитьНастройкиСреды(EnvironmentBuilder);
	Environment = EnvironmentBuilder.Build();
	
	Consumer = Новый ("Addin.MedIgor.RabbitMQ.Stream.Consumer");
	Consumer.SetName("consumer1");
	
	Попытка
		Consumer.Build(Environment, Стрим);
	Исключение
		ВызватьИсключение Consumer.LastError;
	КонецПопытки;
	
	Начало = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	КоличествоСообщений = 0;
	Пока Истина Цикл
		Если Не Consumer.Recv(1000) Тогда
			Прервать;
		КонецЕсли;
		КоличествоСообщений = КоличествоСообщений + 1;
		Тело = ПолучитьСтрокуИзДвоичныхДанных(Consumer.MessageBody());
		Дата = Consumer.ApplicationProperty("Дата1");
		Булево = Consumer.ApplicationProperty("Булево1");
		Число = Consumer.ApplicationProperty("Число1");
		БольшоеЧисло = Consumer.ApplicationProperty("БольшоеЧисло1");
	КонецЦикла;
	
	Если КоличествоСообщений > 0 Тогда
		Offset = Consumer.Offset();
		Consumer.StoreOffset(Offset);
	КонецЕсли;
	
	Конец = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Сообщить(СтрШаблон("Длительность: %1", Конец - Начало));
	
	Сообщить(СтрШаблон("Получено: %1 сообщений", КоличествоСообщений));
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНастройкиСреды(EnvironmentBuilder)
	
	Если ЗначениеЗаполнено(Сервер) Тогда
		EnvironmentBuilder.SetHost(Сервер);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Порт) Тогда
		EnvironmentBuilder.SetPort(Порт);
	КонецЕсли;
	
	Если ИспользоватьTLS Тогда
		
		Если ЗначениеЗаполнено(СертификатКлиента) И ЗначениеЗаполнено(СекретныйКлючКлиента) Тогда
			EnvironmentBuilder.AddClientCertificatesKeys(СертификатКлиента, СекретныйКлючКлиента);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СертификатСервера) Тогда
			EnvironmentBuilder.AddRootCertificates(СертификатСервера);
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(Логин) Тогда
			EnvironmentBuilder.SetUsername(Логин);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Пароль) Тогда
			EnvironmentBuilder.SetPassword(Пароль);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.Логин.Видимость = Не ИспользоватьTLS;
	Элементы.Пароль.Видимость = Не ИспользоватьTLS;
	
	Элементы.СертификатКлиента.Видимость = ИспользоватьTLS;
	Элементы.СекретныйКлючКлиента.Видимость = ИспользоватьTLS;
	Элементы.СертификатСервера.Видимость = ИспользоватьTLS;
	
КонецПроцедуры
